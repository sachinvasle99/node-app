apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "node-app.fullname" . }}
  labels:
    {{- include "node-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "node-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "node-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secretName }}
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secretName }}
                  key: DB_PASSWORD
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secretName }}
                  key: DB_DATABASE
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secretName }}
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secretName }}
                  key: DB_PORT
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: REDIS_PASSWORD    
      livenessProbe:
        httpGet:
        path: /health
        port: http
        initialDelaySeconds: 3
        periodSeconds: 3
      readinessProbe:
        httpGet:
        path: /readiness
        port: http
        initialDelaySeconds: 5
        periodSeconds: 5                                                                            
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}      